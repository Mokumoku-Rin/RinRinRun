走り終わった後
{
  "properties":{
    "time_list": string "経過時間(ms),経過時間(ms)", //カンマ区切りの文字列
    "total_distance": int ランニング距離(m),
    "total_time": int 経過時間(ms)
  },
  "landmark_visits": [
    {
      "id": int,
      "time": int
    },...
  ]
  "geo_json": {
    "type": "LineString",
    "coordinates": [
      [float,float],
      [float,float]
    ]
  }
}

コース情報
{
  "id": int コースID
  "name": string コース名,
  "discription": string コースの説明
  "mean_distance": int 平均ランニング距離(m),
  "mean_time": int 平均でかかった時間(ms),
  "landmarks": [
    { 
      "id": int ランドマークのID
      "name": string ランドマーク名,
      "pos": [float, float],
      "img_url: string imgのURL,
      "discription": string ランドマークの説明
    },
    ...
  ]
}

ランニング時
{
  "ghosts":[
    {
      "name": string ユーザ名,
      "img_url": string ユーザの画像,
      "time_list": [int 経過時間(ms), int 経過時間(ms),...],
      "pos_list": [[float, float], [float, float],....],
      "total_distance": int ランニング距離(m),
      "total_time": int 時間(ms)
      "score": int, ユーザのレーティングポイント //なくてもいいかも
      "landmark_visits":[
        {
          "id": int,
          "time": int, (ms)
        },
        ... 
      ]
    },
    ...
  ]
}


ユーザ登録時
{
    token: string token,
    img_url: string: “”,
    name: string: “”
 }


画像検証時
{
  "landmark_id": int ランドマークID,
  "course_id": int コースID,
  "img": base64 検証用の画像
}

画像検証時に返却するデータ
{
  "result": "string" //OKかNGが入ってくる
}


指定した日の記録を取得 (リクエスト)
{
  "date": string 'yyyy-mm-dd'
}

指定した日の記録を取得 (レスポンス)
{
  "date": string 'yyyy-mm-dd',
  "datas": [
    {
      "total_distance": int ランニング距離(m),
      "total_time": int 経過時間(ms),
      "geo_json": {
        "type": "LineString",
        "coordinates": [
          [float,float],
          [float,float]
        ]
      }
    },
    {
      "total_distance": int ランニング距離(m),
      "total_time": int 経過時間(ms),
      "geo_json": {
        "type": "LineString",
        "coordinates": [
          [float,float],
          [float,float]
        ]
      }
    }, ...
  ]
}

